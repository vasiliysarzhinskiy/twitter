package com.sarzhinskiy.twitter.dao;

import java.util.List;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import static org.junit.Assert.*;

import com.sarzhinskiy.twitter.bean.city.City;
import com.sarzhinskiy.twitter.bean.country.Country;
import com.sarzhinskiy.twitter.dao.CityDAO;
import com.sarzhinskiy.twitter.dao.CountryDAO;


@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations={"/SpringXMLConfigTest.xml"})
public class CityDAOTest {
	@Autowired
	private JdbcTemplate jdbcTemplate;
	
	@Autowired
	private CityDAO cityDAO;
	
	@Autowired
	private CountryDAO countryDAO;
	
	private static final String SELECT_COUNT_CITIES = "select count(*) from city";
	private static final String DELETE_CITIES = "delete from city";
	private static final String DELETE_COUNTRIES = "delete from country";
	private static final String COUNTRY_NAME = "country";
	
	@Before
	public void clearDBTableAndCreateCountry() {
		jdbcTemplate.execute(DELETE_CITIES);
		jdbcTemplate.execute(DELETE_COUNTRIES);
		Country country = new Country(COUNTRY_NAME);
		countryDAO.create(country);
	}	

	@Test
	public void testCreateNoExceptions() {
		City city = new City("A", COUNTRY_NAME);
		cityDAO.create(city);
	}
	
	@Test
	public void testCreate() {
		City city = new City("A", COUNTRY_NAME);
		int bigCityStatus = 1;
		city.setStatus(bigCityStatus);
		cityDAO.create(city);
		int size = jdbcTemplate.queryForObject(SELECT_COUNT_CITIES, Integer.class);
		assertEquals(1, size);
	}
	
	@Test
	public void testCreateWithFilledFields() {
		City city = new City("A", COUNTRY_NAME);
		city.setStatus(5);
		cityDAO.create(city);
		int size = jdbcTemplate.queryForObject(SELECT_COUNT_CITIES, Integer.class);
		assertEquals(1, size);
	}
	
	@Test
	public void testCreateAutoGeneratedId() {
		City city = new City("A", COUNTRY_NAME);
		cityDAO.create(city);
		assertNotNull(city.getId());
	}
	
	@Test
	public void testCreateTwoCities() {
		City city = new City("A", COUNTRY_NAME);
		cityDAO.create(city);
		city = new City("B", COUNTRY_NAME);
		cityDAO.create(city);
		int size = jdbcTemplate.queryForObject(SELECT_COUNT_CITIES, Integer.class);
		assertEquals(2, size);
	}
	
	@Test
	public void testFindById() {
		City city = new City("A", COUNTRY_NAME);
		cityDAO.create(city);
		City findedCity = cityDAO.findById(city.getId());
		assertNotNull(findedCity);
		assertEquals(city.getId(), findedCity.getId());
	}
	
	@Test
	public void testFindByName() {
		City city = new City("A", COUNTRY_NAME);
		cityDAO.create(city);
		List<City> cities  = cityDAO.findByName("A");
		assertEquals(1, cities.size());
		assertEquals(city.getName(), cities.get(0).getName());
	}
	
	@Test
	public void testFindByNotExistName() {
		City city = new City("A", COUNTRY_NAME);
		cityDAO.create(city);
		List<City> cities  = cityDAO.findByName("B");
		assertEquals(0, cities.size());
	}
	
	@Test
	public void testFindCityByCountry() {
		City city = new City("A", COUNTRY_NAME);
		cityDAO.create(city);
		List<City> cities = cityDAO.findByCountry(COUNTRY_NAME);
		assertEquals(1, cities.size());
		assertEquals(COUNTRY_NAME, cities.get(0).getCountry());
	}
	
	@Test
	public void testFindCitiesByCountry() {
		City city = new City("A", COUNTRY_NAME);
		cityDAO.create(city);
		city = new City("B", COUNTRY_NAME);
		cityDAO.create(city);
		String secondCountryName = "QWE";
		countryDAO.create(new Country(secondCountryName));
		city = new City("C", secondCountryName);
		cityDAO.create(city);
		List<City> cities = cityDAO.findByCountry(COUNTRY_NAME);
		assertEquals(2, cities.size());
	}
	
	@Test
	public void testFindAll() {
		City city = new City("A", COUNTRY_NAME);
		cityDAO.create(city);
		city = new City("B", COUNTRY_NAME);
		cityDAO.create(city);
		List<City> cities = cityDAO.findAll();
		int size = cities.size();
		assertEquals(2, size);
	}
	
	@Test
	public void testUpdateNotCreateNewCity() {
		City city = new City("A", COUNTRY_NAME);
		cityDAO.create(city);
		String newName = "a";
		city.setName(newName);
		cityDAO.update(city);
		int size = jdbcTemplate.queryForObject(SELECT_COUNT_CITIES, Integer.class);
		assertEquals(1, size);
	}
	
	@Test
	public void testUpdateModifyCorrect() {
		City city = new City("A", COUNTRY_NAME);
		cityDAO.create(city);
		int status = 1;
		city.setStatus(status);
		String newName = "a";
		city.setName(newName);
		cityDAO.update(city);
		String updCityName = jdbcTemplate.queryForObject("select name from city where id=" 
				+ city.getId(), String.class);
		assertEquals(newName, updCityName);
		
		int updStatus = jdbcTemplate.queryForObject("select status from city where id=" 
				+ city.getId(), Integer.class);
		assertEquals(status, updStatus);
	}
	
	@Test
	public void testRemoveById() {
		City city = new City("A", COUNTRY_NAME);
		cityDAO.create(city);
		cityDAO.remove(city.getId());
		int size = jdbcTemplate.queryForObject(SELECT_COUNT_CITIES, Integer.class);
		assertEquals(0, size);
	}
	
	@Test
	public void testTryRemoveNotExistId() {
		City city = new City("A", COUNTRY_NAME);
		cityDAO.create(city);
		int notExistId = -1;
		cityDAO.remove(notExistId);
		int size = jdbcTemplate.queryForObject(SELECT_COUNT_CITIES, Integer.class);
		assertEquals(1, size);
	}
	
	
	@Test
	public void testRemoveByName() {
		City city = new City("A", COUNTRY_NAME);
		cityDAO.create(city);
		cityDAO.remove("A");
		int size = jdbcTemplate.queryForObject(SELECT_COUNT_CITIES, Integer.class);
		assertEquals(0, size);
	}
	
	@Test
	public void testTryRemoveNotExistCityName() {
		City city = new City("A", COUNTRY_NAME);
		cityDAO.create(city);
		String notExistName = "Q";
		cityDAO.remove(notExistName);
		int size = jdbcTemplate.queryForObject(SELECT_COUNT_CITIES, Integer.class);
		assertEquals(1, size);
	}
	
	@Test
	public void testRemoveByNameAndCountry() {
		City city = new City("A", COUNTRY_NAME);
		cityDAO.create(city);
		cityDAO.remove("A", COUNTRY_NAME);
		int size = jdbcTemplate.queryForObject(SELECT_COUNT_CITIES, Integer.class);
		assertEquals(0, size);
	}
	
	@Test
	public void testRemoveByNameNotDeleteOtherCity() {
		City city = new City("A", COUNTRY_NAME);
		cityDAO.create(city);
		city = new City("B", COUNTRY_NAME);
		cityDAO.create(city);
		cityDAO.remove("A");
		int size = jdbcTemplate.queryForObject(SELECT_COUNT_CITIES, Integer.class);
		assertEquals(1, size);
	}
	
	@Test
	public void testRemoveAll() {
		City city = new City("A", COUNTRY_NAME);
		cityDAO.create(city);
		city = new City("B", COUNTRY_NAME);
		cityDAO.create(city);
		cityDAO.removeAll();
		int size = jdbcTemplate.queryForObject(SELECT_COUNT_CITIES, Integer.class);
		assertEquals(0, size);
	}	
	
}
